@model UserInfo
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider

@using HomeRentTracker.Models
@* <style>
    body {
        position: relative;
        max-width: 25rem;
        margin: 2rem auto;
    }

    a {
        display: block;
        padding: 10px;
        position: absolute;
        z-index: -1;
        top: 1rem;
        left: 100%;
        margin-left: -62px;
        transition: all .2s;
    }

        a:hover {
            margin-left: 0;
        }

  </style> *@
<style>
    /*     .form-floating > .form-control:focus ~ label,
            .form-floating > .form-control:not(:placeholder-shown) ~ label,
            .form-floating > .form-select ~ label {
                opacity: .65;
                transform: scale(.85) translateY(-.5rem) translateX(.15rem);
            } */
    /**
             * Copyright (c) 2020. ExacTI Technology Solutions
             * MIT License.
             * https://exacti.com.br
             * floating-labels - https://github.com/exacti/floating-labels
             */

    /*  .floating-label-input {
                position: relative;
                margin-bottom: 1.5rem;
            }

                .floating-label-input input {
                    width: 100%;
                    padding: 1rem 0.5rem 0.5rem;
                    font-size: 1rem;
                    border: 1px solid #ccc;
                    border-radius: 4px;
                    outline: none;
                }

                .floating-label-input label {
                    position: absolute;
                    top: 50%;
                    left: 0.75rem;
                    transform: translateY(-50%);
                    background-color: white;
                    padding: 0 0.25rem;
                    color: #999;
                    transition: 0.2s ease all;
                    pointer-events: none;
                }

                .floating-label-input input:focus + label,
                .floating-label-input input:not(:placeholder-shown):valid + label {
                    top: -0.6rem;
                    left: 0.5rem;
                    font-size: 0.75rem;
                    color: #007bff;
                } */
    /*  .border-label-input {
                position: relative;
                margin-bottom: 2rem;
            }

                .border-label-input input {
                    width: 100%;
                    padding: 1rem 0.75rem 0.5rem;
                    font-size: 1rem;
                    border: 1px solid #ccc;
                    border-radius: 4px;
                    outline: none;
                    background-color: white;
                }

                .border-label-input label {
                    position: absolute;
                    left: 1rem;
                    top: 50%;
                    transform: translateY(-50%);
                    background-color: white;
                    padding: 0 0.25rem;
                    color: #666;
                    font-size: 0.9rem;
                    pointer-events: none;
                    transition: 0.2s ease all;
                }

                /* Optional: animate on focus or filled */
    /* .border-label-input input:focus + label,
                .border-label-input input:not(:placeholder-shown) + label {
                    color: #007bff;
                }

        .form-floating-border {
                position: relative;
                margin-top: 1.5rem;
            }

            .form-floating-border input.form-control {
                width: 100%;
                padding: 1rem 0.75rem 0.5rem;
                border: 1px solid #ccc;
                border-radius: 4px;
                font-size: 1rem;
                background-color: #fff;
                outline: none;
            }

            .form-floating-border label {
                position: absolute;
                left: 12px;
                top: 0;
                transform: translateY(-50%);
                background: #fff;
                padding: 0 5px;
                color: #666;
                font-size: 0.85rem;
                pointer-events: none;
                transition: 0.2s ease all;
            }

            .form-floating-border input.form-control:focus + label,
            .form-floating-border input.form-control:not(:placeholder-shown) + label {
                color: #007bff;
            }
             */ /*  .floating-label-border {
                position: relative;
                margin-top: 1.5rem;
            }

                .floating-label-border input {
                    padding: 1rem 0.75rem 0.5rem;
                    border: 1px solid #ccc;
                    border-radius: 4px;
                    font-size: 1rem;
                    width: 100%;
                    background-color: white;
                }

                .floating-label-border label {
                    position: absolute;
                    top: 0;
                    left: 12px;
                    transform: translateY(-50%);
                    background: white;
                    padding: 0 5px;
                    font-size: 0.85rem;
                    color: #777;
                    transition: all 0.2s ease;
                    pointer-events: none;
                }

                .floating-label-border input:focus + label,
                .floating-label-border input:not(:placeholder-shown) + label {
                    color: #007bff;
                }
         */
    /*  Working
           .custom-floating {
                position: relative;
                margin-top: 2rem;
            }

                .custom-floating input {
                    width: 100%;
                    padding: 1rem 0.75rem 0.5rem;
                    font-size: 1rem;
                    border: 1px solid #ccc;
                    border-radius: 4px;
                    background-color: white;
                }

                .custom-floating label {
                    position: absolute;
                    left: 10px;
                    top: 50%;
                    transform: translateY(-50%);
                    background-color: white;
                    padding: 0 5px;
                    transition: 0.2s ease all;
                    color: #666;
                    font-size: 1rem;
                    pointer-events: none;
                }


                .custom-floating input:focus + label,
                .custom-floating input:not(:placeholder-shown) + label {
                    top: -8px;
                    left: 10px;
                    font-size: 0.8rem;
                    color: #007bff;
                }
         */ /* Working */
    .floating-label {
        position: relative;
        margin-top: 1.2rem;
    }

        .floating-label input,
        .floating-label textarea,
        .floating-label select {
            width: 100%;
            padding: 1rem 0.75rem 0.5rem;
            font-size: 1rem;
            border: 1px thin #ccc;
            border-radius: 0px;
            background: white;
        }

        .floating-label label {
            position: absolute;
            left: 10px;
            top: 50%;
            transform: translateY(-50%);
            background: white;
            padding: 0 5px;
            color: #6c757d;
            font-size: 1rem;
            transition: all 0.2s ease;
            pointer-events: none;
        }

        /* When input is focused or has text */
        .floating-label input:focus + label,
        .floating-label input:not(:placeholder-shown) + label {
            top: -5px;
            left: 10px;
            font-size: 1rem;
            color: #0d6efd;
        }

</style>
<div class="container">
    <h1 style="text-align:center;background-color:antiquewhite">Sign Up</h1>
    <div class="row">

        <form asp-action="Register" method="post">
            <div asp-validation-summary="All" class="text-danger"></div>

            <div class="row g-sm-3">
                <div class="form-group floating-label">
                    <input asp-for="UserName" class="form-control" id="UserName" placeholder=" " />
                    <label asp-for="UserName"></label>
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>
                @* Working *@
                @*   <div class="form-group floating-label-border">
                    <input asp-for="UserFirstName" class="form-control" placeholder=" " />
                    <label asp-for="UserFirstName"></label>
                    <span asp-validation-for="UserFirstName" class="text-danger"></span>
                </div> *@ @* Working *@
            @*     <div class="floating-label">
                    <input asp-for="UserFirstName" class="form-control" placeholder=" " />
                    <label asp-for="UserFirstName"></label>
                    <span asp-validation-for="UserFirstName" class="text-danger"></span>
                </div>   *@      
                <div class="form-group floating-label col-md-4">                   
                    <input asp-for="UserFirstName" class="form-control" id="UserFirstName" placeholder=" "/>
                     <label asp-for="UserFirstName"></label>
                    <span asp-validation-for="UserFirstName" class="text-danger"></span>
                </div>

                <div class="form-group floating-label col-md-4">
                   
                    <input asp-for="UserMiddleName" class="form-control" id="UserMiddleName" placeholder=" " />
                    <label asp-for="UserMiddleName"></label>
                    <span asp-validation-for="UserMiddleName" class="text-danger"></span>
                </div>

                <div class="form-group floating-label col-md-4">
                   
                    <input asp-for="UserLastName" class="form-control" id="UserLastName" placeholder=" " />
                    <label asp-for="UserLastName"></label>
                    <span asp-validation-for="UserLastName" class="text-danger"></span>
                </div>

                <div class="form-group  floating-label col-md-12">                   
                    <input asp-for="FullName" class="form-control" id="FullName" placeholder=" " readonly />
                    <label asp-for="FullName"></label>
                    <span asp-validation-for="FullName" class="text-danger"></span>
                </div>

                <div class="form-group  floating-label col-md-6">                   
                    <input asp-for="UserEmail" class="form-control" placeholder=" " />
                    <label asp-for="UserEmail"></label>
                    <span asp-validation-for="UserEmail" class="text-danger"></span>
                </div>

                <div class="form-group  floating-label col-md-6">
                    <input asp-for="UserPhone" class="form-control" placeholder=" " />
                    <label asp-for="UserPhone"></label>                  
                    <span asp-validation-for="UserPhone" class="text-danger"></span>
                </div>


                <div class="form-group  floating-label col-md-6">
                  
                    <input asp-for="UserPassword" type="password" id="UserPassword" class="form-control" placeholder=" " />
                    <label asp-for="UserPassword"></label>
                    <span asp-validation-for="UserPassword" class="text-danger"></span>
                </div>

                <div class="form-group  floating-label floating-label col-md-6">
                   
                    <input asp-for="ConfirmPassword" type="password" id="ConfirmPassword" placeholder=" " class="form-control" />
                    <label asp-for="ConfirmPassword "></label>
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Register</button>
                </div>
            </div>
        </form>
    </div>

</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        window.addEventListener('DOMContentLoaded', function () {
            const firstNameInput = document.getElementById('UserFirstName');
            const middleNameInput = document.getElementById('UserMiddleName');
            const lastNameInput = document.getElementById('UserLastName');
            const fullNameInput = document.getElementById('FullName');

            if (!firstNameInput || !middleNameInput || !lastNameInput || !fullNameInput) {
                console.warn("Missing input field(s):", {
                    firstNameInput,
                    middleNameInput,
                    lastNameInput,
                    fullNameInput
                });
                return;
            }

            function updateFullName() {
                const first = firstNameInput.value.trim();
                const middle = middleNameInput.value.trim();
                const last = lastNameInput.value.trim();

                const fullName = [first, middle, last].filter(Boolean).join(' ');
                fullNameInput.value = fullName;
            }

            firstNameInput.addEventListener('input', updateFullName);
            middleNameInput.addEventListener('input', updateFullName);
            lastNameInput.addEventListener('input', updateFullName);
        });

          document.addEventListener('DOMContentLoaded', function () {
            const passwordInput = document.getElementById('UserPassword');
            const confirmInput = document.getElementById('ConfirmPassword');

            // Create message element
            const message = document.createElement('small');
            message.id = "passwordMatchMessage";
            message.classList.add("form-text");
            confirmInput.parentElement.appendChild(message);

            function checkPasswordMatch() {
                const password = passwordInput?.value.trim();
                const confirm = confirmInput?.value.trim();
                console.log("Test");
                if (!password || !confirm) {
                    message.textContent = "";
                    return;
                }

                if (password === confirm) {
                    message.textContent = "Passwords match ✔️";
                    message.classList.remove("text-danger");
                    message.classList.add("text-success");
                } else {
                   
                    message.textContent = "Passwords do not match ✘";
                    message.classList.remove("text-success");
                    message.classList.add("text-danger");
                }
            }

            if (passwordInput && confirmInput) {
                passwordInput.addEventListener('input', checkPasswordMatch);
                confirmInput.addEventListener('input', checkPasswordMatch);
            } else {
                console.warn("Password inputs not found in DOM");
            }
        });
    </script>
}


